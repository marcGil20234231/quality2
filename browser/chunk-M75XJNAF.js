import{a as o}from"./chunk-B2SMLHQB.js";import{K as l,N as C,j as t,k as i,v as c}from"./chunk-4NTA57OQ.js";import{a as d,b as f}from"./chunk-2NFLSA4Y.js";var b=class a{constructor(){}handleError(e){return console.error("An error occurred:",e),i(()=>e)}getCourses(){return console.log("Fetching all courses from static data"),t(o.courses).pipe(l(e=>console.log("Fetched courses:",e)),c(this.handleError))}getCourse(e){console.log("Fetching course from static data:",e);let s=o.courses.find(r=>r.id===e);return s?t(s).pipe(l(r=>console.log("Raw course data received:",r)),c(this.handleError)):i(()=>new Error("Course not found"))}createCourse(e){let r={id:Math.max(...o.courses.map(n=>n.id),0)+1,title:e.title||"",description:e.description||"",instructor:e.instructor||"",duration:e.duration||"",image:e.image||"",level:e.level||"",category:e.category||"",createdAt:new Date().toISOString(),rating:e.rating||0,price:0,code:"",credits:0,objectives:[],requirements:[],enrolledStudents:[],instructorName:"",imageUrl:void 0,videoUrl:void 0,teacherId:void 0};return o.courses.push(r),t(r)}updateCourse(e,s){let r=o.courses.findIndex(u=>u.id===e);if(r===-1)return i(()=>new Error("Course not found"));let n=d(d({},o.courses[r]),s);return o.courses[r]=n,t(n)}deleteCourse(e){let s=o.courses.findIndex(r=>r.id===e);return s===-1?i(()=>new Error("Course not found")):(o.courses.splice(s,1),t(void 0))}searchCourses(e){let s=o.courses.filter(r=>r.title.toLowerCase().includes(e.toLowerCase())||r.description.toLowerCase().includes(e.toLowerCase()));return t(s).pipe(c(this.handleError))}isUserEnrolled(e,s){let r=o.students.find(n=>n.id===e);return t(r?.enrolledCourses.includes(s)||!1)}enrollUserInCourse(e,s){let r=o.courses.find(u=>u.id===s),n=o.students.find(u=>u.id===e);return!r||!n?i(()=>new Error("Course or student not found")):(n.enrolledCourses.includes(s)||n.enrolledCourses.push(s),t(void 0))}getEnrolledCourses(e){let s=o.students.find(r=>r.id===e);return s?t(o.courses.filter(r=>s.enrolledCourses.includes(r.id))):t([])}getRecommendedCourses(e){let s=o.students.find(r=>r.id===+e);return s?t(o.courses.filter(r=>!s.enrolledCourses.includes(r.id)).slice(0,3)):t(o.courses.slice(0,3))}updateCourseImage(e,s){let r=o.courses.findIndex(u=>u.id===e);if(r===-1)return i(()=>new Error("Course not found"));let n=f(d({},o.courses[r]),{image:s});return o.courses[r]=n,t(n)}static \u0275fac=function(s){return new(s||a)};static \u0275prov=C({token:a,factory:a.\u0275fac,providedIn:"root"})};export{b as a};
